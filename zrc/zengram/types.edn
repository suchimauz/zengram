{ns zengram.types

 type
 {:zen/tags #{zen/tag}}

 ;; Common types
 parse-mode
 {:zen/tags #{zen/schema}
  :type     zen/string
  :enum     [{:value "MarkdownV2"}
             {:value "Markdown"}
             {:value "HTML"}]}

 ;; End common types

 user
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:id :is_bot :first_name}
  :keys     {:id                          {:type zen/integer}
             :is_bot                      {:type zen/boolean}
             :first_name                  {:type zen/string}
             :last_name                   {:type zen/string}
             :username                    {:type zen/string}
             :language_code               {:type zen/string}
             :is_premium                  {:type zen/boolean}
             :can_join_groups             {:type zen/boolean}
             :can_read_all_group_messages {:type zen/boolean}
             :supports_inline_queries     {:type zen/boolean}}}

 chat
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:id :type}
  :keys     {:id                                      {:type zen/integer}
             :type                                    {:type zen/string}
             :title                                   {:type zen/string}
             :username                                {:type zen/string}
             :first_name                              {:type zen/string}
             :last_name                               {:type zen/string}
             :is_forum                                {:type zen/boolean}
             :photo                                   {:confirms #{chat_photo}}
             :active_usernames                        {:type  zen/vector
                                                       :every {:type zen/string}}
             :emoji_status_custom_emoji_id            {:type zen/string}
             :bio                                     {:type zen/string}
             :has_private_forwards                    {:type zen/boolean}
             :has_restricted_voice_and_video_messages {:type zen/boolean}
             :join_to_send_messages                   {:type zen/boolean}
             :join_by_request                         {:type zen/boolean}
             :description                             {:type zen/string}
             :invite_link                             {:type zen/string}
             :pinned_message                          {:confirms #{message}}
             :permissions                             {:confirms #{chat_permissions}}
             :slow_mode_delay                         {:type zen/integer}
             :message_auto_delete_time                {:type zen/integer}
             :has_aggressive_anti_spam_enabled        {:type zen/boolean}
             :has_hidden_members                      {:type zen/boolean}
             :has_protected_content                   {:type zen/boolean}
             :sticker_set_name                        {:type zen/string}
             :can_set_sticker_set                     {:type zen/boolean}
             :linked_chat_id                          {:type zen/integer}
             :location                                {:confirms #{chat_location}}}}

 message-entity
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:type :offset :length}
  :keys     {:type            {:type zen/string}
             :offset          {:type zen/integer}
             :length          {:type zen/integer}
             :url             {:type zen/string}
             :user            {:confirms #{user}}
             :language        {:type zen/string}
             :custom_emoji_id {:type zen/string}}}

 web-app-info
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require #{:url}
  :keys    {:url {:type zen/string}}}

 login-url
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:url}
  :keys     {:url                  {:type zen/string}
             :forward_text         {:type zen/string}
             :bot_username         {:type zen/string}
             :request_write_access {:type zen/boolean}}}

 callback-game
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require #{:user_id :score}
  :keys    {:user_id {:type zen/integer}
            :score {:type zen/integer}
            :force {:type zen/boolean}
            :disable_edit_message {:type zen/boolean}
            :chat_id {:type zen/integer}
            :message_id {:type zen/integer}
            :inline_message_id {:type zen/string}}}

 inline-keyboard-button
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:text}
  :keys     {:text                             {:type zen/string}
             :url                              {:type zen/string}
             :callback_data                    {:type zen/string}
             :web_app                          {:confirms #{web-app-info}}
             :login_url                        {:confirms #{login-url}}
             :switch_inline_query              {:type zen/string}
             :switch_inline_query_current_chat {:type zen/string}
             :callback_game                    {:confirms #{callback-game}}
             :pay                              {:type zen/boolean}}}

 inline-keyboard-markup
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:inline_keyboard}
  :keys     {:inline_keyboard {:type  zen/vector
                               :every {:type     zen/vector
                                       :confirms #{inline-keyboard-button}}}}}

 input-media-common-fields
 {:zen/tags #{zen/schema}
  :type     zen/map
  :require  #{:type :media}
  :keys     {:type             {:type zen/string
                                :enum [{:value "photo"}
                                       {:value "video"}
                                       {:value "animation"}
                                       {:value "audio"}
                                       {:value "document"}]}
             :media            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 input-media-photo
 {:zen/tags #{type zen/schema}
  :confirms #{input-media-common-fields}
  :type     zen/map
  :keys     {:has_spoiler {:type zen/boolean}}}

 input-media-video
 {:zen/tags #{type zen/schema}
  :confirms #{input-media-common-fields}
  :type     zen/map
  :keys     {:thumb              {:type zen/string}
             :width              {:type zen/integer}
             :height             {:type zen/integer}
             :duration           {:type zen/integer}
             :supports_streaming {:type zen/boolean}
             :has_spoiler {:type zen/boolean}}}

 input-media-animation
 {:zen/tags #{type zen/schema}
  :confirms #{input-media-common-fields}
  :type     zen/map
  :keys     {:thumb    {:type zen/string}
             :width    {:type zen/integer}
             :height   {:type zen/integer}
             :duration {:type zen/integer}
             :has_spoiler {:type zen/boolean}}}

 input-media-audio
 {:zen/tags #{type zen/schema}
  :confirms #{input-media-common-fields}
  :type     zen/map
  :keys     {:thumb     {:type zen/string}
             :duration  {:type zen/integer}
             :title     {:type zen/string}
             :performer {:type zen/string}}}

 input-media-document
 {:zen/tags #{type zen/schema}
  :confirms #{input-media-common-fields}
  :type     zen/map
  :keys     {:thumb                          {:type zen/string}
             :disable_content_type_detection {:type zen/boolean}}}

 input-media
 {:zen/tags #{type zen/schema}
  :type zen/case
  :case [{:when {:match {:type "photo"}}
          :then {:confirms #{input-media-photo}}}
         {:when {:match {:type "video"}}
          :then {:confirms #{input-media-video}}}
         {:when {:match {:type "animation"}}
          :then {:confirms #{input-media-animation}}}
         {:when {:match {:type "audio"}}
          :then {:confirms #{input-media-audio}}}
         {:when {:match {:type "document"}}
          :then {:confirms #{input-media-document}}}]}

 labeled-price
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :keys    {:label {:type zen/string}
            :amount {:type zen/integer}}}

 input-text-message-content
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:message_text}
  :keys     {:message_text             {:type zen/string}
             :parse_mode               {:confirms #{parse-mode}}
             :entities                 {:type  zen/vector
                                        :every {:confirms #{message-entity}}}
             :disable_web_page_preview {:type zen/boolean}}}

 input-location-message-content
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require #{:latitude :longitude}
  :keys    {:latitude               {:type zen/number}
            :longitude              {:type zen/number}
            :horizontal_accuracy    {:type zen/number}
            :live_period            {:type zen/integer}
            :heading                {:type zen/integer}
            :proximity_alert_radius {:type zen/integer}}}

 input-venue-message-content
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require #{:latitude :longitude :title :address}
  :keys    {:latitude          {:type zen/number}
            :longitude         {:type zen/number}
            :title             {:type zen/string}
            :address           {:type zen/string}
            :foursquare_id     {:type zen/string}
            :foursquare_type   {:type zen/string}
            :google_place_id   {:type zen/string}
            :google_place_type {:type zen/string}}}

 input-contact-message-content
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require #{:phone_number :first_name}
  :keys    {:phone_number {:type zen/string}
            :first_name {:type zen/string}
            :last_name {:type zen/string}
            :vcard {:type zen/string}}}

 input-invoice-message-content
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:title :description :payload :provider_token :currency :prices}
  :keys     {:title                         {:type zen/string}
             :description                   {:type zen/string}
             :payload                       {:type zen/string}
             :provider_token                {:type zen/string}
             :currency                      {:type zen/string}
             :prices                        {:type  zen/vector
                                             :every {:confirms #{labeled-price}}}
             :max_tip_amount                {:type zen/integer}
             :suggested_tip_amounts         {:type  zen/vector
                                             :every {:type zen/integer}}
             :provider_data                 {:type zen/string}
             :photo_url                     {:type zen/string}
             :photo_size                    {:type zen/integer}
             :photo_width                   {:type zen/integer}
             :photo_height                  {:type zen/integer}
             :need_name                     {:type zen/boolean}
             :need_phone_number             {:type zen/boolean}
             :need_email                    {:type zen/boolean}
             :need_shipping_address         {:type zen/boolean}
             :send_phone_number_to_provider {:type zen/boolean}
             :send_email_to_provider        {:type zen/boolean}
             :is_flexible                   {:type zen/boolean}}}

 input-message-content
 {:zen/tags #{type zen/schema}
  :type     zen/case
  :case     [{:when {:match {:message_text (:zen.match/present?)}}
              :then {:confirms #{input-text-message-content}}}
             {:when {:match {:latitude  (:zen.match/present?)
                             :longitude (:zen.match/present?)}}
              :then {:confirms #{input-location-message-content}}}
             {:when {:match {:latitude  (:zen.match/present?)
                             :longitude (:zen.match/present?)
                             :title     (:zen.match/present?)
                             :address   (:zen.match/present?)}}
              :then {:confirms #{input-venue-message-content}}}
             {:when {:match {:phone_number (:zen.match/present?)
                             :first_name   (:zen.match/present?)}}
              :then {:confirms #{input-contact-message-content}}}
             {:when {:match {:title          (:zen.match/present?)
                             :description    (:zen.match/present?)
                             :payload        (:zen.match/present?)
                             :provider_token (:zen.match/present?)
                             :currency       (:zen.match/present?)
                             :prices         (:zen.match/present?)}}
              :then {:confirms #{input-invoice-message-content}}}]}

 inline-query-result-common-fields
 {:zen/tags #{zen/schema}
  :type     zen/map
  :require  #{:type :id}
  :keys     {:type                  {:type zen/string}
             :id                    {:type zen/string}
             :input_message_content {:confirms #{input-message-content}}
             :reply_markup          {:confirms #{inline-keyboard-markup}}}}

 inline-query-result-article
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require #{:title :input_message_content}
  :keys    {:title {:type zen/string}
            :url {:type zen/string}
            :hide_url {:type zen/boolean}
            :description {:type zen/string}
            :thumb_url {:type zen/string}
            :thumb_width {:type zen/integer}
            :thumb_height {:type zen/integer}}}

 inline-query-result-photo
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require #{:photo_url :thumb_url}
  :keys    {:photo_url        {:type zen/string}
            :thumb_url        {:type zen/string}
            :photo_width      {:type zen/integer}
            :photo_height     {:type zen/integer}
            :title            {:type zen/string}
            :description      {:type zen/string}
            :caption          {:type zen/string}
            :parse_mode       {:confirms #{parse-mode}}
            :caption_entities {:type  zen/vector
                               :every {:confirms #{message-entity}}}}}

 inline-query-result-gif
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:gif_url :thumb_url}
  :keys     {:gif_url          {:type zen/string}
             :gif_width        {:type zen/integer}
             :gif_height       {:type zen/integer}
             :gif_duration     {:type zen/integer}
             :thumb_url        {:type zen/string}
             :thumb_mime_type  {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-mpeg4gif
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:mpeg4_url :thumb_url}
  :keys     {:mpeg4_url        {:type zen/string}
             :mpeg4_width      {:type zen/integer}
             :mpeg4_height     {:type zen/integer}
             :mpeg4_duration   {:type zen/integer}
             :thumb_url        {:type zen/string}
             :thumb_mime_type  {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-video
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:video_url :mime_type :thumb_url :title}
  :keys     {:video_url        {:type zen/string}
             :mime_type        {:type zen/string}
             :thumb_url        {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}
             :video_width      {:type zen/integer}
             :video_height     {:type zen/integer}
             :video_duration   {:type zen/integer}
             :description      {:type zen/string}}}

 inline-query-result-audio
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:audio_url :title}
  :keys     {:audio_url        {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}
             :audio_duration   {:type zen/integer}
             :performer        {:type zen/string}}}

 inline-query-result-voice
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:voice_url :title}
  :keys     {:voice_url        {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}
             :voice_duration   {:type zen/integer}}}

 inline-query-result-document
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:title :document_url :mime_type}
  :keys     {:title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}
             :document_url     {:type zen/string}
             :mime_type        {:type zen/string}
             :description      {:type zen/string}
             :thumb_url        {:type zen/string}
             :thumb_width      {:type zen/integer}
             :thumb_height     {:type zen/integer}}}

 inline-query-result-location
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:latitude :longitude :title}
  :keys     {:latitude               {:type zen/number}
             :longitude              {:type zen/number}
             :title                  {:type zen/string}
             :horizontal_accuracy    {:type zen/number}
             :live_period            {:type zen/integer}
             :heading                {:type zen/integer}
             :proximity_alert_radius {:type zen/integer}
             :thumb_url              {:type zen/string}
             :thumb_width            {:type zen/integer}
             :thumb_height           {:type zen/integer}}}

 inline-query-result-venue
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:latitude :longitude :title :address}
  :keys     {:latitude          {:type zen/number}
             :longitude         {:type zen/number}
             :title             {:type zen/string}
             :address           {:type zen/string}
             :foursquare_id     {:type zen/string}
             :foursquare_type   {:type zen/string}
             :google_place_id   {:type zen/string}
             :google_place_type {:type zen/string}
             :thumb_url         {:type zen/string}
             :thumb_width       {:type zen/integer}
             :thumb_height      {:type zen/integer}}}

 inline-query-result-contact
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:phone_number :first_name}
  :keys     {:phone_number {:type zen/string}
             :first_name   {:type zen/string}
             :last_name    {:type zen/string}
             :vcard        {:type zen/string}
             :thumb_url    {:type zen/string}
             :thumb_width  {:type zen/integer}
             :thumb_height {:type zen/integer}}}

 inline-query-result-game
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require  #{:type :id :game_short_name}
  :keys     {:type            {:type zen/string}
             :id              {:type zen/string}
             :game_short_name {:type zen/string}
             :reply_markup    {:confirms #{inline-keyboard-markup}}}}

 inline-query-result-cached-photo
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:photo_file_id}
  :keys     {:photo_file_id    {:type zen/string}
             :title            {:type zen/string}
             :description      {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-cached-gif
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:gif_file_id}
  :keys     {:gif_file_id      {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-cached-mpeg4gif
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:mpeg4_file_id}
  :keys     {:mpeg4_file_id    {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-cached-sticker
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:sticker_file_id}
  :keys     {:sticker_file_id {:type zen/string}}}

 inline-query-result-cached-document
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:document_file_id}
  :keys     {:document_file_id {:type zen/string}
             :description      {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-cached-video
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:video_file_id}
  :keys     {:video_file_id    {:type zen/string}
             :title            {:type zen/string}
             :description      {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-cached-voice
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:voice_file_id}
  :keys     {:voice_file_id    {:type zen/string}
             :title            {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}

 inline-query-result-cached-audio
 {:zen/tags #{type zen/schema}
  :confirms #{inline-query-result-common-fields}
  :type     zen/map
  :require  #{:audio_file_id}
  :keys     {:audio_file_id    {:type zen/string}
             :caption          {:type zen/string}
             :parse_mode       {:confirms #{parse-mode}}
             :caption_entities {:type  zen/vector
                                :every {:confirms #{message-entity}}}}}
 
 inline-query-result
 {:zen/tags #{type zen/schema}
  :type     zen/case
  :case     [{:when {:match {:type "article"}}
              :then {:confirms #{inline-query-result-article}}}

             {:when {:match {:type          "photo"
                             :photo_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-photo}}}
             {:when {:match {:type          "photo"
                             :photo_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-photo}}}

             {:when {:match {:type        "gif"
                             :gif_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-gif}}}
             {:when {:match {:type        "gif"
                             :gif_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-gif}}}

             {:when {:match {:type          "mpeg4_gif"
                             :mpeg4_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-mpeg4gif}}}
             {:when {:match {:type          "mpeg4_gif"
                             :mpeg4_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-mpeg4gif}}}

             {:when {:match {:type          "video"
                             :video_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-video}}}
             {:when {:match {:type          "video"
                             :video_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-video}}}

             {:when {:match {:type          "audio"
                             :audio_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-audio}}}
             {:when {:match {:type          "audio"
                             :audio_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-audio}}}

             {:when {:match {:type          "voice"
                             :voice_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-voice}}}
             {:when {:match {:type          "voice"
                             :voice_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-voice}}}

             {:when {:match {:type             "document"
                             :document_file_id (:zen.match/present?)}}
              :then {:confirms #{inline-query-result-cached-document}}}
             {:when {:match {:type             "document"
                             :document_file_id (:zen.match/nil?)}}
              :then {:confirms #{inline-query-result-document}}}

             {:when {:match {:type "location"}}
              :then {:confirms #{inline-query-result-location}}}

             {:when {:match {:type "venue"}}
              :then {:confirms #{inline-query-result-venue}}}

             {:when {:match {:type "contact"}}
              :then {:confirms #{inline-query-result-contact}}}

             {:when {:match {:type "game"}}
              :then {:confirms #{inline-query-result-game}}}]}

 template
 {:zen/tags #{type zen/schema}
  :type     zen/map
  :require #{}
  :keys    {;
            :test1 {:type zen/string}
            :test2 {:type zen/integer}
            :test3 {:type zen/boolean}
            ;
            }}}